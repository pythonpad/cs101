{
    "title": "[Answer] Trash 1",
    "content": "from cs1robots import *\n\n# Your code must work for all world files below.\n\nload_world('worlds/trash1.wld')\n# load_world('worlds/trash2.wld')\n\nbot = Robot()\n\nbot.set_trace('blue')\nbot.set_pause(0.3)\n\ndef turn_right():\n    for i in range(3):\n        bot.turn_left()\n\ndef pick_all_beepers():\n    while bot.on_beeper():\n        bot.pick_beeper()\n        \ndef drop_all_beepers():\n    while bot.carries_beepers():\n        bot.drop_beeper()\n\ndef move_and_pick_to_wall():\n    pick_all_beepers()\n    while bot.front_is_clear():\n        bot.move()\n        pick_all_beepers()\n        \ndef move_to_wall():\n    while bot.front_is_clear():\n        bot.move()\n        \nmove_and_pick_to_wall()\nbot.turn_left()\nbot.turn_left()\nmove_to_wall()\nturn_right()\nbot.move()\ndrop_all_beepers()\nbot.turn_left()\nbot.turn_left()\nbot.move()\n",
    "files": {
        ".grader.py": {
            "type": "text",
            "body": "import re\nfrom gradepad import StdoutCollector, Grader\nimport cs1robots\n\ntest_data = [\n    ('trash1', {'0,1': 9}),\n    ('trash2', {'0,1': 18}),\n]\n\ndef grade(grader):\n    collector = StdoutCollector()\n    bot_test = grader.test('A robot exists.', 'Please make one robot. No more, no less. Try \"bot = Robot()\"?')\n    tests = []\n    \n    with open('main.py', 'r') as f:\n        main_src = f.read()\n    \n    for i, (world_name, beepers_dict) in enumerate(test_data):\n        test = grader.test('Robot moved all beepers in the world to the \"trash can\" spot in world \"%s\".' % world_name , 'Please pick up all beepers in the world, and drop them all in the \"trash can\" spot of the world. Check out the example image to find the \"trash can\" spot.')\n        \n        cs1robots.helper.unlock_world()\n        cs1robots.load_world(world_name)\n        cs1robots.helper.lock_world()\n        \n        with collector:\n            if i == 0:\n                import main\n            else:\n                exec(main_src)\n                \n            robots = cs1robots.helper.get_all_robots()\n            bot_test.expect(len(robots) == 1)\n            test.expect(cs1robots.helper.get_all_beepers_dict() == beepers_dict)\n    \ngrader = Grader(locale='en')\ngrader.run(grade)"
        },
        ".passed.json": {
            "type": "text",
            "body": ""
        },
        "worlds/": {
            "type": "dir",
            "body": ""
        },
        "worlds/trash1.wld": {
            "type": "text",
            "body": "avenues = 10\nstreets = 10\nrobot = (1, 1, 'E', 0)\nwalls = [\n    (3, 2), \n    (5, 2), \n    (7, 2), \n    (9, 2), \n    (11, 2), \n    (13, 2), \n    (15, 2), \n    (17, 2), \n    (19, 2), \n    (1, 4), \n    (2, 3)\n]\nbeepers = {\n    (6, 1): 1, \n    (3, 1): 3, \n    (5, 1): 1, \n    (10, 1): 2, \n    (7, 1): 2\n}"
        },
        "worlds/trash2.wld": {
            "type": "text",
            "body": "avenues = 10\nstreets = 10\nrobot = (1, 1, 'E', 0)\nwalls = [\n    (3, 2), \n    (5, 2), \n    (7, 2), \n    (9, 2), \n    (11, 2), \n    (13, 2), \n    (15, 2), \n    (17, 2), \n    (19, 2), \n    (1, 4), \n    (2, 3)\n]\nbeepers = {\n    (9, 1): 1, \n    (5, 1): 13, \n    (2, 1): 2, \n    (7, 1): 2\n}"
        }
    }
}