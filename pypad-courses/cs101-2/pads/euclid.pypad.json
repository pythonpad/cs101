{
    "title": "Being Euclid",
    "content": "def is_triangle(a, b, c):\n    return True\n\na = float(input('Side a: '))\n",
    "files": {
        ".grader.py": {
            "type": "text",
            "body": "import re\nfrom gradepad import GradePipe, Grader\nimport cs1robots\n\ntest_data = [\n    [1.3, 3.1, 9.6, False],\n    [13.5, 14.1, 4.3, True],\n    [11.4, 13.8, 12.4, True],\n    [7.8, 14.1, 8.7, True],\n    [7.5, 15.3, 2.4, False],\n    [8.4, 14.5, 5.3, False],\n]\n\ndef grade(grader):    \n    with open('main.py', 'r') as f:\n        main_src = f.read()\n    \n    for i, (a, b, c, r) in enumerate(test_data):\n        test1 = grader.test('The program prints out %s when user enters %.1f, %.1f, and %.1f with the keyboard.' % ('YES' if r else 'NO', a, b, c), 'Please take keyboard input with function input() and print out a message. The message should be YES or NO (case sensitive).')\n        test2 = grader.test('The function is_triangle(%.1f, %.1f, %.1f) returns %s.' % (a, b, c, r), 'Please return a correct boolean value from is_triangle() function.')\n        \n        pipe = GradePipe()\n        pipe.set_inputs(['%.1f' % a, '%.1f' % b, '%.1f' % c])\n        with pipe:\n            if i == 0:\n                import main\n            else:\n                exec(main_src)\n                \n        test1.expect(pipe.get_output().strip() == ('YES' if r else 'NO'))\n        test2.expect(main.is_triangle(a, b, c) == r)\n        \n    \ngrader = Grader(locale='en')\ngrader.run(grade)"
        }
    }
}